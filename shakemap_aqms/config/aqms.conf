###########################################################################
# aqms.conf : configuration file for eq2xml and db2xml
###########################################################################

###########################################################################
# netid -- the network identifier of the source network; this should
# be the "N" part of NSCL. There is no default and the parameter must
# be supplied.
#
# Example:
#
#   netid = ci
###########################################################################

###########################################################################
# network -- the long-form name of the source network. The default is
# ''.
#
# Example:
#
#   network = CISN Southern California Seismic Network
###########################################################################

###########################################################################
# valid_codes -- a space-separated list of valid site codes in adhoc.lis; 
# codes other than those listed here will not be included as ShakeMap data;
# the default is to allow codes 1, 2, 3, and 4; if specified, the valid
# codes specified here will completely override the defaults.
#
# Example:
#
#	valid_codes = 1, 2, 5, 11, 13
#
# The above line overrides the defaults and allows only codes 1, 2, 5, 11,
# and 13.
###########################################################################

###########################################################################
# query_mode -- selects the way the databases in db.conf are queried and
# controls the output file(s). Three values are available:
#
# query_mode = 1 : creates an output file from the first database 
#                  encountered that has at least "query_min_stas" stations
#                  available (see description of query_min_stas below).
# query_mode = 2 : queries all of the databases listed in db.conf, and
#                  outputs a file based on the database that returns the
#                  maximum number of stations.
# query_mode = 3 : (default) queries all of the databases listed in db.conf, 
#                  and outputs a file for each database that has at least one
#                  station. 'model' will then create a union of these files
#                  internally for processing.
#
# Note that "station" in the above description means "NET.STA" as is our
# current custom. Also note that when grind combines an amplitude with an
# identical amplitude (i.e., net.sta.loc.chan are the same) from
# another file or files (see query_mode 3 above), it will likely use 
# the last amp it encounters in whatever order it reads the files. Which 
# means that if your databases have different amps for the same SNCL 
# components (why is that happening?), the amp that grind uses will be 
# somewhat unpredictable. So the the values of repeated amps should be 
# consistent across all databases.
#
# Example:
#
#	query_mode = 1
#
###########################################################################

###########################################################################
# query_min_stas -- if "query_mode" (see above) is '1', this parameter sets a
# minimum on the number of stations that a database must return, otherwise
# the program will continue to the next database. If no database satisfies
# this constraint, the output file will consist of the data from the 
# database that returned the most stations (i.e., the behavior becomes like
# query_mode '2'). This parameter is ignored for query modes '2' and '3'.
#
# The purpose of this parameter is to prevent the database search from
# stopping when the program encounters a database with an anomalously small
# number of stations. (E.g., two stations are returned when you are "supposed"
# to get 136.)
#
# The default is 1 (one). Acceptable values are >= 1.
#
# Note that the default behavior of query_mode and query_min_stas (both '1)
# results in a single data file being produced from the first database
# that returns ANY amps. 
#
# Example:
#
#	query_min_stas = 10
#
###########################################################################

###########################################################################
# adhoc_file -- provides the name of the file containing the "adhoc" 
# list. This should be an absolute path name. It is not an error for this 
# file to not exist, however if it does exist, then only stations found 
# within it (and having the appropriate "valid_codes" (see above) will be 
# output. 
#
# Example:
#
#   adhoc_file = /home/shake/data/adhoc.lis
#
###########################################################################

###########################################################################
# dbs: a list of one or more databases to query for event and amplitude
# data. Each database should be given a unique name, and they will be
# queried in lexicographic order until the query is satisfied. Each
# database section should consist of the following entries:
#
#   host: The hostname or IP address of the machine hosting the database
#   port: The port to which to connect (usually 1521)
#   sid: The Service ID to which to connect (usually the name of the 
#        database)
#   user: The username under which to connect.
#   password: The password of 'user'. 
#
# Example:
#   [dbs]
#       [[database1]]
#           driver = oracle
#           host = myserver.mydomain.xyz
#           port = 1521
#           sid = userdb
#           user = me
#           password = 1234
#       [[database2]]
#           driver = postgres
#           host = myserver.mydomain.xyz
#           port = 5432
#           sid = userdb
#           user = me
#           password = 1234
#           ...
#
# At least one database must be defined; there is no default
###########################################################################
[dbs]
